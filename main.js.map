{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/reminder/components/calendar/calendar.component.ts","./src/app/reminder/components/calendar/calendar.component.html","./src/app/reminder/components/day-viewer/day-viewer.component.ts","./src/app/reminder/components/day-viewer/day-viewer.component.html","./src/app/reminder/components/reminder-editor/reminder-editor.component.ts","./src/app/reminder/components/reminder-editor/reminder-editor.component.html","./src/app/reminder/components/tool-wrapper/tool-wrapper.component.ts","./src/app/reminder/components/tool-wrapper/tool-wrapper.component.html","./src/app/reminder/directives/city-selector.directive.ts","./src/app/reminder/reminder.module.ts","./src/app/reminder/services/calendar.service.ts","./src/app/reminder/services/day-viewer.service.ts","./src/app/reminder/services/reminder.service.ts","./src/app/reminder/services/weather.service.ts","./src/app/reminder/store/reminder.query.ts","./src/app/reminder/store/reminder.store.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'calendar';\n}\n","<app-tool-wrapper></app-tool-wrapper>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ReminderModule } from './reminder/reminder.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    ReminderModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { CalendarService } from '../../services/calendar.service';\nimport * as moment from 'moment';\n\nconst DATE_FORMAT = 'YYYY-MM-DD';\n\nconst MONTH_FORMAT = 'YYYY-MM';\n\nconst LABEL_MONTH = 'MMMM YYYY';\n\n@Component({\n  selector: 'app-calendar',\n  templateUrl: './calendar.component.html',\n  styleUrls: ['./calendar.component.scss']\n})\nexport class CalendarComponent implements OnInit {\n\n  /**\n   * Normalized list of days associated to the current month.\n   */\n  public days: Array<any>;\n\n  /**\n   * Current month displayed in the calendar.S\n   */\n  public currentMonth: string;\n  \n  /**\n   * Current month name.\n   */\n  public monthName: string;\n\n  /**\n   * List of headers.\n   */\n  public headers: Array<string> = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n\n  /**\n   * Days in week.\n   */\n  public daysInWeek: number = 7;\n\n  constructor(\n    private calendarService: CalendarService\n  ) { }\n\n  /**\n   * Initialzes component's subscriptions.\n   */\n  ngOnInit(): void {\n    this.calendarService.onCurrentMonthChange(this.onMonthChange.bind(this));\n    this.calendarService.onRemindersInMonthChange(\n        this.onRemindersChange.bind(this))\n  }\n\n  /**\n   * Handles the current month change to \n   * @param currentMonth \n   */\n  onMonthChange(currentMonth) {\n    this.currentMonth = currentMonth;\n    this.monthName = moment(this.currentMonth).format(LABEL_MONTH);\n    this.updateDays(this.calendarService.getNormalizedDaysInMonth(currentMonth));\n    this.calendarService.updateRemindersForCurrentMonth();\n  }\n\n  updateDays(daysInMonth) {\n    this.days = daysInMonth.map((day) => {\n      return {\n        date: day,\n        reminders: 0,\n      }\n    })\n  }\n\n  /**\n   * Updates the current month adding +/- unit.\n   * @param unit \n   */\n  moveMonth(unit) {\n    this.calendarService.moveCurrentMonth(unit);\n  }\n\n  /**\n   * Changes the current date.\n   * @param date \n   */\n  selectDate(date) {\n    const dateMonth = moment(date).format(MONTH_FORMAT);\n\n    if (dateMonth === this.currentMonth) {\n      this.calendarService.changeCurrentDate(date.format(DATE_FORMAT));\n    }\n  }\n\n  /**\n   * Associates the given reminders to their corresponding dates in the \n   *    calendar.\n   * @param reminders \n   */\n  onRemindersChange(reminders) {\n    this.days = this.days.map((day) => {\n      const dateString = day.date.format(DATE_FORMAT);\n      const dateReminders = reminders[dateString] || [];\n      \n      return {\n        date: day.date,\n        reminders: dateReminders.length,\n      }\n    });\n  }\n}\n","<section class=\"calendar\">\n  <h2 class=\"calendar__title\">{{monthName}}</h2>\n  <div class=\"calendar__toolbar\">\n    <button (click)=\"moveMonth(-1)\"><i class=\"fas fa-angle-double-left\"></i></button>\n    <button (click)=\"moveMonth(1)\"><i class=\"fas fa-angle-double-right\"></i></button>\n  </div>\n\n  <ul class=\"calendar__headers\">\n    <li *ngFor=\"let header of headers\"\n        class=\"calendar__header\">\n      {{header}}\n    </li>\n  </ul>\n\n  <ul class=\"calendar__days-wrapper\">\n    <li *ngFor=\"let day of days\"\n        class=\"calendar__day\"\n        [ngClass]=\"{\n          'calendar__day--disabled': day.date.format('YYYY-MM') !== currentMonth,\n          'calendar__day--with-reminders': day.reminders\n        }\"\n        (click)=\"selectDate(day.date)\">\n      \n      <div class=\"calendar__day-header\">\n        {{day.date.format('DD')}}\n      </div>\n      \n      <div class=\"calendar__day-content\">\n        <small *ngIf=\"day.reminders\">{{day.reminders}} reminder<span *ngIf=\"day.reminders > 1\">s</span> </small>\n      </div>\n    </li>\n  </ul>\n</section>","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { DayViewerService } from '../../services/day-viewer.service';\nimport { Reminder } from '../../model/reminder.model';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-day-viewer',\n  templateUrl: './day-viewer.component.html',\n  styleUrls: ['./day-viewer.component.scss']\n})\nexport class DayViewerComponent implements OnInit, OnDestroy {\n\n  public reminders: Array<Reminder>;\n\n  public date: string;\n\n  constructor(\n      private dayViewerService: DayViewerService,\n  ) { }\n\n  /**\n   * Subscribes the componet's listeners.\n   */\n  ngOnInit(): void {\n    this.dayViewerService.subscribeToDateChange(this.onDateChange.bind(this));\n  }\n\n  ngOnDestroy(): void {\n    this.dayViewerService.unsuscribeToDateChange();\n  }\n\n  /**\n   * Closes the day viewer.\n   */\n  close() {\n    this.dayViewerService.closeViewer();\n  }\n\n  /**\n   * Handles the on data change, loads the reminders for that date.\n   * @param date \n   */\n  onDateChange(date) {\n    this.date = moment(date).format('MMMM DD, YYYY');\n    this.reminders = this.dayViewerService.getDayReminders(date);\n  }\n\n  /**\n   * Opens the reminder editor with the given reminder loaded.\n   * @param reminderId \n   */\n  openReminder(reminder=null) {\n    this.dayViewerService.openReminderEditor(reminder);\n  }\n\n  /**\n   * Removes all the reminders of the current date.\n   */\n  deleteAll() {\n    const ids = this.reminders.map((reminder) => reminder.id);\n    \n    this.dayViewerService.deleteAll(ids);\n  }\n}\n","<div class=\"day-viewer modal\">\n  <div class=\"modal__content-wrapper\">\n    <div class=\"modal__content-header\">\n      <h4 class=\"modal__title\">{{date}}</h4>\n      <i class=\"fas fa-times modal__close\" (click)=\"close()\"></i>\n    </div>\n\n    <div class=\"day-viewer__content-body\">\n      <div class=\"day-viewer__content-no-reminders\"\n          *ngIf=\"!reminders.length\">\n        <span>No reminders found.</span>\n      </div>\n\n      <ul class=\"day-viewer__content-reminders\"\n          *ngIf=\"reminders.length\">\n        <li class=\"day-viewer__reminder\"\n            style=\"--background-color: {{reminder.color}}; --text-color: {{reminder.text_color}}\"\n            *ngFor=\"let reminder of reminders\"\n            (click)=\"openReminder(reminder)\">\n          <span>{{reminder.title}}</span> \n          <span>{{reminder.time}}</span>\n        </li>\n      </ul>\n    </div>\n    \n    <div class=\"modal__content-footer\">\n      <button *ngIf=\"reminders.length\"\n          (click)=\"deleteAll()\">Delete all</button>\n      <button (click)=\"openReminder()\">Add new</button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { Reminder, City, Forecast } from '../../model/reminder.model';\nimport { ReminderService } from '../../services/reminder.service';\nimport { FormControl } from '@angular/forms';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-reminder-editor',\n  templateUrl: './reminder-editor.component.html',\n  styleUrls: ['./reminder-editor.component.scss']\n})\nexport class ReminderEditorComponent implements OnInit, OnDestroy {\n\n  /**\n   * Model associated with the form.\n   */\n  public reminder: Partial<Reminder>;\n\n  /**\n   * List of cities.\n   */\n  public cities: Array<any>;\n\n  /**\n   * Indicates if the forms has an attempt of been submitted.\n   */\n  public submitted: boolean = false;\n\n  /**\n   * Indicates if the selected city is valid.\n   */\n  private isValidCity: boolean = false;\n\n  /**\n   * Indicates if the selected date is valid.\n   */\n  private isValidDate: boolean = true;\n\n  constructor(\n      private reminderService: ReminderService,\n      private ref: ChangeDetectorRef,\n  ) { }\n\n  /**\n   * Initialzes component's subscriptions.\n   */\n  ngOnInit(): void {\n    this.reminderService.onSelectedChange(this.onReminderChange.bind(this));\n    this.reminderService.onForecastChange(this.onForecastChange.bind(this));\n  }\n\n  /**\n   * Unsubscribe from the observers.\n   */\n  ngOnDestroy(): void {\n    this.reminderService.unsubscribeObservers();\n  }\n\n  /**\n   * Updates the forecast of the current reminder with the one given.\n   * @param forecast \n   */\n  onForecastChange(forecast) {\n    this.reminder.forecast.name = forecast?.name || '';\n    this.reminder.forecast.loaded = forecast?.loaded || true;\n    \n    this.ref.detectChanges();\n  }\n\n  /**\n   * Handles the on submit of the reminder editor form.\n   * @param reminderForm\n   */\n  onSubmit(reminderForm) {\n    this.submitted = true;\n\n    if (reminderForm.valid) {\n      this.reminder.date = this.getNormalizedDate(this.reminder.date);\n      this.reminderService.saveReminder(this.reminder);\n      this.resetForm(reminderForm);\n    }\n  }\n\n  /**\n   * Returns a normalized date based on the one given. If not valid, today's \n   *    date is returned.\n   * @param date \n   */\n  getNormalizedDate(date: string) {\n    const normalizedDate = moment(date);\n\n    return normalizedDate.isValid() ? normalizedDate.format('YYYY-MM-DD') : \n        moment().format('YYYY-MM-DD');\n  }\n\n  /**\n   * Handles the change of the selected reminder to populate or clean the form\n   *    values with the given reminder.\n   * @param reminder\n   */\n  onReminderChange(reminder: Partial<Reminder>) {\n    this.reminder = {\n      color: '#fff',\n      text_color: '#000',\n      date: this.reminderService.getCurrentDate(),\n      ...reminder\n    };\n\n    this.reminder.city = {name: '', lat: 0, lng: 0};\n    this.reminder.forecast = {name: '', loaded: false, ...reminder.forecast};\n    this.onCityChange(reminder.city);\n  }\n\n  /**\n   * Resets to the original form state.\n   * @param reminderForm \n   */\n  resetForm(reminderForm) {\n    this.submitted = false;\n  }\n\n  /**\n   * Closes the reminder editor.\n   */\n  close() {\n    this.reminderService.closeEditor();\n  }\n\n  /**\n   * Deletes the reminder.\n   */\n  deleteReminder() {\n    this.reminderService.deleteReminder(this.reminder.id);\n  }\n\n  /**\n   * Triggers the weather change when the city is changed.\n   * @param city \n   */\n  onCityChange(city: City) {\n    this.isValidCity = Boolean(city);\n\n    this.reminder.city.name = city?.name || '';\n    this.reminder.city.lat = city?.lat || 0;\n    this.reminder.city.lng = city?.lng || 0;\n     \n    this.updateWeather();\n  }\n\n  /**\n   * Triggers the weather change when the date is changed.\n   * @param dateField\n   */\n  onDateChange(dateField: FormControl) {\n    this.isValidDate = dateField.valid;\n    this.reminder.date = dateField.value;\n\n    this.updateWeather();\n  }\n\n  /**\n   * Triggers the process to get a new weather if the city and the date are \n   *    valid.\n   */\n  private updateWeather() {\n    const isValidData = this.isValidCity && this.isValidDate;\n    \n    isValidData ? \n        this.reminderService.getWeather(this.reminder.city, this.reminder.date) :\n        this.onForecastChange(null);\n  }\n}\n","<form class=\"reminder-editor modal\"\n    #reminderForm=\"ngForm\"\n    (submit)=\"onSubmit(reminderForm)\">\n  <div class=\"modal__content-wrapper\">\n\n    <div class=\"modal__content-header\">\n      <h4 class=\"modal__title\">Reminder</h4>\n      <i class=\"fas fa-times modal__close\" (click)=\"close()\"></i>\n    </div>\n\n    <div class=\"reminder-editor__body\">\n      <div class=\"reminder-editor__field\">\n        <label class=\"reminder-editor__label\"\n            for=\"reminder-title\">Title:</label>\n        <input type=\"text\"\n            style=\"--text-color: {{reminder.text_color}}; --background-color: {{reminder.color}}\"\n            class=\"reminder-editor__input\"\n            name=\"reminder-title\"\n            id=\"reminder-title\"\n            required\n            maxlength=\"30\"\n            autocomplete=\"off\"\n            [(ngModel)]=\"reminder.title\">\n      </div>\n\n      <div class=\"reminder-editor__field\">\n        <label class=\"reminder-editor__label\"\n            for=\"reminder-date\">Date:</label>\n        <input type=\"text\"\n            class=\"reminder-editor__input\"\n            name=\"reminder-date\"\n            id=\"reminder-date\"\n            placeholder=\"e.g, 2020-08-01\"\n            pattern=\"^([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))$\"\n            required\n            #date=\"ngModel\"\n            (ngModelChange)=\"onDateChange(date)\"\n            [(ngModel)]=\"reminder.date\">\n        <small class=\"reminder-editor__field-note\">Please use YYYY-MM-DD pattern.</small>\n      </div>\n\n      <div class=\"reminder-editor__field\">\n        <label class=\"reminder-editor__label\" \n            for=\"reminder-time\">Time:</label>\n        <input type=\"text\" \n            class=\"reminder-editor__input\"\n            name=\"reminder-time\"\n            id=\"reminder-time\"\n            placeholder=\"e.g, 06:34\"\n            pattern=\"^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$\"\n            required\n            [(ngModel)]=\"reminder.time\">\n        <small class=\"reminder-editor__field-note\">Please use 24H pattern: HH:MM.</small>\n      </div>\n\n      <div class=\"reminder-editor__field\">\n        <label for=\"reminder-city\" \n            class=\"reminder-editor__label\">City:</label>\n        <input type=\"text\"\n            class=\"reminder-editor__input\"  \n            name=\"reminder-city\"\n            id=\"reminder-city\"\n            [(ngModel)]=\"reminder.city.name\"\n            placeholder=\"e.g, Bogota, Colombia\"\n            appCitySelector\n            required\n            (cityValueChange)=\"onCityChange($event)\">\n      </div>\n\n      <div class=\"reminder-editor__field\">\n        <label for=\"reminder-forecast\" \n            class=\"reminder-editor__label\">Forecast</label>\n        <input type=\"text\"\n            class=\"reminder-editor__input\"  \n            name=\"reminder-forecast\"\n            id=\"reminder-forecast\"\n            [value]=\"reminder.forecast.name\"\n            disabled\n            required>\n      </div>\n\n      <div class=\"reminder-editor__field\">\n        <label for=\"reminder-color\" \n            class=\"reminder-editor__label\">\n          <span>Background color: </span>\n          <input type=\"color\" \n              class=\"reminder-editor__color-field\"\n              value=\"{{reminder.color}}\"\n              name=\"reminder-color\"\n              id=\"reminder-color\"\n              [(ngModel)]=\"reminder.color\">\n          <div class=\"reminder-editor__color-field-preview\"\n              style=\"--color: {{reminder.color}}\"></div>\n        </label>\n      </div>\n\n      <div class=\"reminder-editor__field\">\n        <label for=\"reminder-text-color\" \n            class=\"reminder-editor__label\">\n          <span>Text color: </span>\n          <input type=\"color\"\n              class=\"reminder-editor__color-field\"  \n              value=\"{{reminder.text_color}}\"\n              name=\"reminder-text-color\"\n              id=\"reminder-text-color\"\n              [(ngModel)]=\"reminder.text_color\">\n          <div class=\"reminder-editor__color-field-preview\"\n              style=\"--color: {{reminder.text_color}}\"></div>\n        </label>\n      </div>\n    </div>\n\n    <div class=\"modal__content-footer\">\n      <button class=\"reminder-editor__save-button\"\n          *ngIf=\"reminder.id\"\n          (click)=\"deleteReminder()\">\n        Delete\n      </button>\n\n      <button class=\"reminder-editor__save-button\"\n          type=\"submit\">\n        Save\n      </button>\n      <p class=\"reminder-editor__error\"\n          *ngIf=\"reminderForm.invalid && submitted\">Theres is an error, please check that all the data is valid.</p>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { ReminderQuery } from '../../store/reminder.query';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-tool-wrapper',\n  templateUrl: './tool-wrapper.component.html',\n  styleUrls: ['./tool-wrapper.component.scss']\n})\nexport class ToolWrapperComponent implements OnInit {\n\n  public isDayViewerOpened: Observable<boolean>;\n\n  public isReminderEditorOpened: Observable<boolean>;\n\n  constructor(\n      private reminderQuery: ReminderQuery,\n  ) { }\n\n  ngOnInit(): void {\n    this.isDayViewerOpened = this.reminderQuery.getDayViewerOpened$;\n    this.isReminderEditorOpened = this.reminderQuery.getReminderEditorOpened$;\n  }\n}\n","<app-calendar></app-calendar>\n<app-day-viewer *ngIf=\"isDayViewerOpened | async\"></app-day-viewer>\n<app-reminder-editor *ngIf=\"isReminderEditorOpened | async\"></app-reminder-editor> ","import { } from 'googlemaps';\nimport { Directive, ElementRef, AfterViewInit, OnDestroy, Output, EventEmitter, HostListener, platformCore } from '@angular/core';\nimport { NgModel } from '@angular/forms';\n\nconst AUTOCOMPLETE_CHANGED_EVENT = 'place_changed';\n\n@Directive({\n  selector: '[appCitySelector]'\n})\nexport class CitySelectorDirective implements AfterViewInit, OnDestroy {\n\n  @Output() cityValueChange: EventEmitter<any> = new EventEmitter();\n\n  /**\n   * Google autocomplete.\n   */\n  private autocomplete: google.maps.places.Autocomplete;\n\n  /**\n   * Listener associated with city change.\n   */\n  private listener: google.maps.MapsEventListener;\n\n  constructor(\n    private model: NgModel,\n    private elementRef: ElementRef,\n  ) { }\n\n  /**\n   * Initialized the autocomplete.\n   */\n  ngAfterViewInit() {\n    this.initAutocomplete();\n  }\n\n  /**\n   * Removes the city change listener.\n   */\n  ngOnDestroy() {\n    google.maps.event.removeListener(this.listener);\n  }\n\n  /**\n   * Cleans the input.\n   */\n  @HostListener('change')\n  cleanCity() {\n    this.cityValueChange.emit(null);\n  }\n\n  /**\n   * Creates a new instance of the autocomplete. Attaches the city change event.\n   */\n  private initAutocomplete() {\n    this.autocomplete = new google.maps.places.Autocomplete(\n        this.elementRef.nativeElement, {types: ['(cities)']});\n\n    this.listener = google.maps.event.addListener(this.autocomplete,\n        AUTOCOMPLETE_CHANGED_EVENT, this.onAutocompleteChanged.bind(this));\n  }\n\n  /**\n   * Handles the autcomplete changes event.\n   */\n  private onAutocompleteChanged() {\n    const place = this.autocomplete.getPlace();\n    const isValidValue = place.geometry;\n\n    isValidValue ? this.updateCity(place) : this.cleanCity();\n  }\n\n  /**\n   * Emits the city changed value.\n   * @param city \n   */\n  private updateCity(city: google.maps.places.PlaceResult) {\n    const cityName = city.formatted_address;\n\n    this.cityValueChange.emit({\n      name: cityName,\n      lat: city.geometry.location.lat(),\n      lng: city.geometry.location.lng(),\n    });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { ReminderEditorComponent } from './components/reminder-editor/reminder-editor.component';\nimport { ReminderService } from './services/reminder.service';\nimport { CalendarComponent } from './components/calendar/calendar.component';\nimport { CalendarService } from './services/calendar.service';\nimport { DayViewerComponent } from './components/day-viewer/day-viewer.component';\nimport { DayViewerService } from './services/day-viewer.service';\nimport { ToolWrapperComponent } from './components/tool-wrapper/tool-wrapper.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CitySelectorDirective } from './directives/city-selector.directive';\nimport { WeatherService } from './services/weather.service';\n\n@NgModule({\n  declarations: [\n    ReminderEditorComponent,\n    CalendarComponent,\n    DayViewerComponent,\n    ToolWrapperComponent,\n    CitySelectorDirective,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n  ],\n  exports: [\n    ReminderEditorComponent,\n    CalendarComponent,\n    DayViewerComponent,\n    ToolWrapperComponent,\n    CitySelectorDirective,\n  ],\n  providers: [\n    ReminderService,\n    CalendarService,\n    DayViewerService,\n    WeatherService,\n  ]\n})\nexport class ReminderModule { }\n","import { Injectable } from \"@angular/core\";\r\nimport { ReminderQuery } from \"../store/reminder.query\";\r\nimport { ReminderStore } from \"../store/reminder.store\";\r\nimport * as moment from 'moment';\r\n\r\nconst WeekDays = {\r\n  FIRST_DAY: 0,\r\n  LAST_DAY: 6,\r\n};\r\n\r\n@Injectable()\r\nexport class CalendarService {\r\n  \r\n  constructor(\r\n    private reminderQuery: ReminderQuery,\r\n    private store: ReminderStore\r\n  ) {}\r\n\r\n  /**\r\n   * Subscribes the given callback to the current month change.\r\n   * @param callback \r\n   */\r\n  onCurrentMonthChange(callback) {\r\n    this.reminderQuery.getCurrentMonth$.subscribe(callback);\r\n  }\r\n\r\n  /**\r\n   * Subscribes the given callback to the reminders in month change.\r\n   * @param callback \r\n   */\r\n  onRemindersInMonthChange(callback) {\r\n    this.reminderQuery.getRemindersInMonth$.subscribe(callback);\r\n  }\r\n\r\n  /**\r\n   * Changes the value of the current_month adding the given unit.\r\n   * @param unit \r\n   */\r\n  moveCurrentMonth(unit) {\r\n    const currentMonth = this.reminderQuery.getCurrentMonth();\r\n    const newMonth = moment(currentMonth).add(unit, 'month').format('YYYY-MM');\r\n    \r\n    this.store.setCurrentMonth(newMonth);\r\n  }\r\n\r\n  /**\r\n   * Changes the current date with the newDate given.\r\n   * @param newDate \r\n   */\r\n  changeCurrentDate(newDate) {\r\n    this.store.setCurrentDate(newDate);\r\n    this.store.setDayViewerOpened(true);\r\n  }\r\n\r\n  /**\r\n   * Triggers the process to update the list of reminders associated with the \r\n   *    current month.\r\n   */\r\n  updateRemindersForCurrentMonth() {\r\n    this.store.updateRemindersForCurrentMonth();\r\n  }\r\n\r\n  /**\r\n   * Returns an array of days in the month completing it with days of previous\r\n   *    and next month to complete first and last week.\r\n   * @param month \r\n   */\r\n  getNormalizedDaysInMonth(month) {\r\n    const daysInMonth = moment(month).daysInMonth();\r\n    const lastMonthWeekDay = moment(month).endOf('month').day();\r\n    const firstMonthWeekDay = moment(month).startOf('month').day();\r\n\r\n    const daysToGetPreviousMonthLastDay = firstMonthWeekDay - WeekDays.FIRST_DAY;\r\n    const daysToCompleteMonthLastWeek = WeekDays.LAST_DAY - lastMonthWeekDay;\r\n    const totalDays = daysInMonth \r\n        + daysToGetPreviousMonthLastDay \r\n        + daysToCompleteMonthLastWeek;\r\n    \r\n    const initDate = moment(month)\r\n        .startOf('month')\r\n        .subtract(daysToGetPreviousMonthLastDay, 'day')\r\n        .format('YYYY-MM-DD');\r\n    \r\n    return this.generateDays(0, totalDays, initDate);\r\n  }\r\n\r\n  generateDays(init, end, initDate) {\r\n    const days = [];\r\n\r\n    while (init < end) {\r\n      const day = moment(initDate).add(init, 'day');\r\n      days.push(day);\r\n      init++;\r\n    }\r\n\r\n    return days;\r\n  }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ReminderStore } from \"../store/reminder.store\";\r\nimport { ReminderQuery } from \"../store/reminder.query\";\r\nimport { Subscription } from \"rxjs\";\r\nimport * as moment from 'moment';\r\n\r\n@Injectable()\r\nexport class DayViewerService {\r\n\r\n  private subscription: Subscription;\r\n\r\n  constructor(\r\n      private store: ReminderStore,\r\n      private reminderQuery: ReminderQuery\r\n  ) { }\r\n  \r\n  /**\r\n   * Sets the value of day viewer opened to false.\r\n   */\r\n  closeViewer() {\r\n    this.store.setDayViewerOpened(false);\r\n  }\r\n\r\n  /**\r\n   * Subscribes the given callback to the current date change.\r\n   * @param callback \r\n   */\r\n  subscribeToDateChange(callback) {\r\n    this.subscription = this.reminderQuery.getCurrentDate$.subscribe(callback);\r\n  }\r\n\r\n  /**\r\n   * Unsubscribes from the get current date observable.\r\n   */\r\n  unsuscribeToDateChange() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Returns the reminders of the given day.\r\n   * @param day \r\n   */\r\n  getDayReminders(day) {\r\n    const reminders = this.reminderQuery.getRemindersInDay(day);\r\n\r\n    reminders.sort((firstReminder, secondReminder) => (\r\n      this.isHourLessThanOther(firstReminder.time, secondReminder.time, day)\r\n    ));\r\n\r\n    return reminders\r\n  }\r\n\r\n  /**\r\n   * Returns true if the firstHour is less than the secondHour\r\n   * @param firstHour \r\n   * @param secondHour \r\n   * @param day \r\n   */\r\n  isHourLessThanOther(firstHour: string, secondHour: string, day: string) {\r\n    const momentFirstHour = moment(`${day} ${firstHour}`);\r\n    const momentSecondHour = moment(`${day} ${secondHour}`);\r\n\r\n    return momentFirstHour.isBefore(momentSecondHour) ? -1 : 1;\r\n  }\r\n\r\n  /**\r\n   * Open the reminder editor with the given reminder selected. If no reminder\r\n   *    is given, the editor opens to create a new reminder.\r\n   * @param reminderId \r\n   */\r\n  openReminderEditor(reminder) {\r\n    const selectedReminder = reminder || {};\r\n    \r\n    this.store.setSelected(selectedReminder);\r\n    this.store.setDayViewerOpened(false);\r\n    this.store.setReminderEditorOpened(true);\r\n  }\r\n\r\n  /**\r\n   * Deletes all the reminders with the given ids.\r\n   * @param ids \r\n   */\r\n  deleteAll(ids: Array<string>) {\r\n    this.store.remove(ids);\r\n    this.store.updateRemindersForCurrentMonth();\r\n    this.closeViewer();\r\n  }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { Reminder, City } from \"../model/reminder.model\";\r\nimport { ReminderQuery } from \"../store/reminder.query\";\r\nimport { ReminderStore } from \"../store/reminder.store\";\r\nimport * as uuid from 'uuid';\r\nimport { Subscription } from \"rxjs\";\r\nimport { WeatherService } from \"./weather.service\";\r\n\r\n@Injectable()\r\nexport class ReminderService {\r\n\r\n  private subscription: Subscription;\r\n\r\n  private forecastSubscription: Subscription;\r\n\r\n  /**\r\n   * Service constructor\r\n   * @param store Reminders store.\r\n   */\r\n  constructor(\r\n      private reminderQuery: ReminderQuery,\r\n      private store: ReminderStore,\r\n      private weatherService: WeatherService,\r\n  ) {}\r\n\r\n  /**\r\n   * Subscribes the given callback to reminder selected changes.\r\n   * @param callback \r\n   */\r\n  onSelectedChange(callback) {\r\n    this.subscription = \r\n        this.reminderQuery.getSelectedReminder$.subscribe(callback);\r\n  }\r\n\r\n  /**\r\n   * Subscribes the given callback to forecast changes.\r\n   * @param callback \r\n   */\r\n  onForecastChange(callback) {\r\n    this.forecastSubscription = \r\n        this.reminderQuery.getForecast$.subscribe(callback);\r\n  }\r\n\r\n  /**\r\n   * Unsubscribes from the observers.\r\n   */\r\n  unsubscribeObservers() {\r\n    this.subscription.unsubscribe();\r\n    this.forecastSubscription.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Saves the give reminder in the store. It determines if should update an \r\n   *    existing reminder or create a new one. Clears the selected reminder.\r\n   * @param reminder\r\n   */\r\n  saveReminder(reminderToSave: Partial<Reminder>) {\r\n    reminderToSave.id ? this.updateReminder(reminderToSave as Reminder) : \r\n        this.insertReminder(reminderToSave);\r\n    this.store.updateRemindersForCurrentMonth();\r\n    this.store.clearSelected();\r\n    this.closeEditor();\r\n  }\r\n\r\n  /**\r\n   * Updates the values of the given reminder in the store.\r\n   * @param reminder\r\n   */\r\n  updateReminder(reminder: Reminder) {\r\n    this.store.update(reminder.id, reminder);\r\n  }\r\n\r\n  /**\r\n   * Inserts a new reminder in the store. It assigns a new ID and the selected\r\n   *    date to the reminder.\r\n   * @param reminder\r\n   */\r\n  insertReminder(reminder: Partial<Reminder>) {\r\n    reminder.id = uuid.v4();\r\n\r\n    this.store.add(reminder as Reminder);\r\n  }\r\n\r\n  /**\r\n   * Returns the current date.\r\n   */\r\n  getCurrentDate() {\r\n    return this.reminderQuery.getCurrentDate();\r\n  }\r\n\r\n  /**\r\n   * Closes the reminder editor.\r\n   */\r\n  closeEditor() {\r\n    this.store.setReminderEditorOpened(false);\r\n  }\r\n  \r\n  /**\r\n   * Deletes the reminder with the given id.\r\n   * @param id\r\n   */\r\n  deleteReminder(id: string) {\r\n    this.store.remove(id);\r\n    this.store.updateRemindersForCurrentMonth();\r\n    this.closeEditor();\r\n  }\r\n\r\n  /**\r\n   * Calls the weather service to update the forecast.\r\n   * @param city \r\n   * @param date \r\n   */\r\n  getWeather(city: City, date: string) {\r\n    this.weatherService.getWeatherForCity(city, date);\r\n  }\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { City, Forecast } from \"../model/reminder.model\";\r\nimport { ReminderQuery } from \"../store/reminder.query\";\r\nimport * as moment from 'moment';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ReminderStore } from \"../store/reminder.store\";\r\n\r\n@Injectable()\r\nexport class WeatherService {\r\n  \r\n  /**\r\n   * Base URL of the weather service.\r\n   */\r\n  private baseUrl = 'https://api.openweathermap.org/data/2.5/onecall';\r\n\r\n  /**\r\n   * API key used in every request.\r\n   */\r\n  private key = 'aeece9a48c100e57e889d1d8381871e3';\r\n  \r\n  constructor(\r\n    private httpService: HttpClient,\r\n    private reminderQuery: ReminderQuery,\r\n    private store: ReminderStore,\r\n  ) {}\r\n  \r\n  /**\r\n   * Returns the weather for the given city, in the given date.\r\n   * @param city \r\n   * @param date \r\n   */\r\n  getWeatherForCity(city: City, date: string) {\r\n    this.isDateBetweenAllowedRange(date) ? \r\n        this.processWeatherCall(city, date) :\r\n        this.setDataNoAvailable();\r\n  }\r\n\r\n  /**\r\n   * Sets the current forecast as data not available and loaded false, to try\r\n   *    to load it later.\r\n   */\r\n  setDataNoAvailable() {\r\n    const forecast = {name: 'Data not available', loaded: false};\r\n\r\n    this.store.setForecast(forecast);\r\n  }\r\n\r\n  /**\r\n   * Processes the call to the weather api.\r\n   * @param city \r\n   * @param date\r\n   */\r\n  processWeatherCall(city: City, date: string) {\r\n    const target = moment(date, 'YYYY-MM-DD');\r\n    const isTargetSameOrAfterToday = target.isSameOrAfter(moment(), 'day');\r\n    const endPoint = isTargetSameOrAfterToday ? '' : '/timemachine';\r\n    const parameters = this.getHttpParams(city, target, \r\n        isTargetSameOrAfterToday);\r\n    const finalUrl = [this.baseUrl, endPoint].join('');\r\n    \r\n    this.makeCall(finalUrl, parameters, isTargetSameOrAfterToday, date);\r\n  }\r\n\r\n  /**\r\n   * Makes the http get call to the given url, with the given query params.\r\n   *    Calls the process response function if Ok status is got from call.\r\n   * @param url \r\n   * @param parameters \r\n   * @param isTargetSameOrAfterToday \r\n   * @param date \r\n   */\r\n  makeCall(url: string, parameters: any, isTargetSameOrAfterToday, \r\n      date: string) {\r\n    this.httpService.get<any>(url, {params: parameters})\r\n        .pipe(tap((data) => this.processResponse(data, isTargetSameOrAfterToday, \r\n            date))).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Gets the forecast from the response and save it in the store.\r\n   * @param data \r\n   * @param isTargetSameOrAfterToday \r\n   * @param date \r\n   */\r\n  processResponse(data: any, isTargetSameOrAfterToday: boolean, date: string) {\r\n    const forecast = this.getForecast(data, isTargetSameOrAfterToday, date);\r\n\r\n    this.store.setForecast(forecast);\r\n  }\r\n\r\n  /**\r\n   * Returns the forecast for the given date.\r\n   * @param data \r\n   * @param isTargetSameOrAfterToday \r\n   * @param date \r\n   */\r\n  getForecast(data: any, isTargetSameOrAfterToday: boolean, date: string) {\r\n    const forecast = {name: data.current.weather[0].main, loaded: true};\r\n\r\n    forecast.name = isTargetSameOrAfterToday ? \r\n        this.getWeatherSameAfter(data, date) : forecast.name;\r\n    \r\n    return forecast as Forecast;\r\n  }\r\n\r\n  /**\r\n   * Retusn the corresponding forecast based in the difference in days between\r\n   *    the target date and today's date. If target date is from future, returns\r\n   *    the value from the daily info.\r\n   * @param data \r\n   * @param date \r\n   */\r\n  getWeatherSameAfter(data: any, date: string) {\r\n    const index = (moment(date).diff(\r\n        moment().format('YYYY-MM-DD'), 'days') % 9) - 1;\r\n\r\n    return index > -1 ? data.daily[index].weather[0].main : \r\n        data.current.weather[0].main;\r\n  }\r\n\r\n  /**\r\n   * Returns the query params needed to do the http request.\r\n   * @param city \r\n   * @param target \r\n   * @param isTargetSameOrAfterToday \r\n   */\r\n  getHttpParams(city: City, target: moment.Moment, \r\n      isTargetSameOrAfterToday: boolean) {\r\n    const parameters: any = {lat: city.lat, lon: city.lng, appid: this.key};\r\n    \r\n    if (!isTargetSameOrAfterToday) parameters.dt = moment(target).format('X');\r\n\r\n    return parameters;\r\n  }\r\n\r\n  /**\r\n   * Check if the given date is between the allowed boundaries to make the http\r\n   *    call.\r\n   * @param date \r\n   */\r\n  isDateBetweenAllowedRange(date: string) {\r\n    const lowerBound = moment().subtract(6, 'day');\r\n    const upperBound = moment().add(8, 'day');\r\n    const target = moment(date, 'YYYY-MM-DD');\r\n    \r\n    return target.isBetween(lowerBound, upperBound);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { ReminderStore, ReminderState } from './reminder.store';\r\nimport { QueryEntity } from '@datorama/akita';\r\nimport * as moment from 'moment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReminderQuery extends QueryEntity<ReminderState> {\r\n\r\n  getSelectedReminder$ = this.select(state => state.ui.selected);\r\n\r\n  getCurrentMonth$ = this.select(state => state.ui.current_month);\r\n\r\n  getCurrentDate$ = this.select(state => state.ui.current_date);\r\n\r\n  getRemindersInMonth$ = this.select(state => state.ui.reminders_month);\r\n\r\n  getDayViewerOpened$ = this.select(state => state.ui.day_viewer_opened);\r\n\r\n  getReminderEditorOpened$ = this.select(state => state.ui.reminder_editor_opened);\r\n\r\n  getForecast$ = this.select(state => state.ui.forecast);\r\n\r\n  constructor(protected store: ReminderStore) {\r\n    super(store);\r\n  }\r\n\r\n  /**\r\n   * Gets the current selected date.\r\n   */\r\n  getCurrentDate() {\r\n    return this.getValue().ui.current_date;\r\n  }\r\n\r\n  /**\r\n   * Gets the current selected month.\r\n   */\r\n  getCurrentMonth() {\r\n    return this.getValue().ui.current_month;\r\n  }\r\n\r\n  /**\r\n   * Returns the reminders associated to the given day.\r\n   * @param day \r\n   */\r\n  getRemindersInDay(day) {\r\n    return this.getValue().ui.reminders_month[day] || [];\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Reminder, Forecast } from '../model/reminder.model';\r\nimport { ID, EntityStore, StoreConfig, EntityState } from '@datorama/akita';\r\nimport * as moment from 'moment';\r\n\r\nexport interface ReminderState extends EntityState<Reminder, string> {\r\n  ui: {\r\n    selected: Partial<Reminder>,\r\n    current_date: string,\r\n    current_month: string,\r\n    reminders_month: Object,\r\n    day_viewer_opened: boolean,\r\n    reminder_editor_opened: boolean,\r\n    forecast?: Forecast,\r\n  }\r\n}\r\n\r\nexport function createInitialState(): ReminderState {\r\n  return {\r\n    ui: {\r\n      selected: {} as Partial<Reminder>,\r\n      current_date: moment().format('YYYY-MM-DD'),\r\n      current_month: moment().format('YYYY-MM'),\r\n      reminders_month: {},\r\n      day_viewer_opened: false,\r\n      reminder_editor_opened: false,\r\n      forecast: null,\r\n    }\r\n  }\r\n}\r\n\r\n@Injectable({providedIn: 'root'})\r\n@StoreConfig({name: 'reminders'})\r\nexport class ReminderStore extends EntityStore<ReminderState> {\r\n  \r\n  constructor() {\r\n    super(createInitialState());\r\n  }\r\n\r\n  /**\r\n   * Changes the selected reminder in the ui.\r\n   * @param selected \r\n   */\r\n  setSelected(selected: Reminder) {\r\n    this.updateUi({selected});\r\n  }\r\n\r\n  /**\r\n   * Clears the selected reminder in the ui.\r\n   */\r\n  clearSelected() {\r\n    this.updateUi({selected: {}});\r\n  }\r\n\r\n  /**\r\n   * Changes the value of the current date in the ui.\r\n   * @param currentDate \r\n   */\r\n  setCurrentDate(currentDate: string) {\r\n    this.updateUi({current_date: currentDate});\r\n  }\r\n\r\n  /**\r\n   * Changes the value of the current month in the ui.\r\n   * @param currentMonth \r\n   */\r\n  setCurrentMonth(currentMonth: string) {\r\n    this.updateUi({current_month: currentMonth});\r\n  }\r\n\r\n  /**\r\n   * Changes the value of day_viewer_opened.\r\n   * @param dayViewerOpened \r\n   */\r\n  setDayViewerOpened(dayViewerOpened: boolean) {\r\n    this.updateUi({day_viewer_opened: dayViewerOpened});\r\n  }\r\n\r\n  /**\r\n   * Changes the value of reminder_editor_opened\r\n   * @param reminderEditorOpened \r\n   */\r\n  setReminderEditorOpened(reminderEditorOpened: boolean) {\r\n    this.updateUi({reminder_editor_opened: reminderEditorOpened});\r\n  }\r\n\r\n  /**\r\n   * Updates the ui with the propertyToOverride field.\r\n   * @param propertyToOverride \r\n   */\r\n  private updateUi(propertyToOverride) {\r\n    const updatedUi = {\r\n      ...this.getValue().ui,\r\n      ...propertyToOverride,\r\n    }\r\n    \r\n    this.update({ui: updatedUi});\r\n  }\r\n\r\n  /**\r\n   * Saves the cities in the store.\r\n   */\r\n  setCities(cities) {\r\n    this.updateUi({cities});\r\n  }\r\n\r\n  /**\r\n   * Updates the reminders_month with all the reminders for that month grupped \r\n   *    by date.\r\n   */\r\n  updateRemindersForCurrentMonth() {\r\n    const currentMonth = this.getValue().ui.current_month;\r\n    const reminders = Object.entries(this.getValue().entities);\r\n    const remindersInMonth = reminders.filter(([id, reminder]) => (\r\n      this.isReminderInCurrentMonth(reminder.date, currentMonth)));\r\n    const remindersClean = reminders.map(([id, reminder]) => reminder);\r\n    const groupedReminders = this.groupByKey(remindersClean, 'date');\r\n\r\n    this.updateUi({reminders_month: groupedReminders});\r\n  }\r\n\r\n    /**\r\n   * Returns tru if the date is in the currentMonth.\r\n   * @param date \r\n   * @param currentMonth \r\n   */\r\n  isReminderInCurrentMonth(date: string, currentMonth: string) {\r\n    const dateWithoutDay = moment(date, 'YYYY-MM-DD').format('YYYY-MM');\r\n    return dateWithoutDay === currentMonth;\r\n  }\r\n\r\n  /**\r\n   * Groups the given entries in an object using the given key as id.\r\n   * @param entries \r\n   * @param key \r\n   */\r\n  groupByKey(entries, key) {\r\n    return entries.reduce((grouped, entry) => {\r\n      const groupedEntries = grouped[entry[key]] || [];\r\n      \r\n      groupedEntries.push(entry);\r\n      grouped[entry[key]] = groupedEntries;\r\n\r\n      return grouped;\r\n    }, {});\r\n  }\r\n\r\n  /**\r\n   * Sets a new value to the forecast.\r\n   * @param forecast \r\n   */\r\n  setForecast(forecast: Forecast) {\r\n    this.updateUi({forecast});\r\n  }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}